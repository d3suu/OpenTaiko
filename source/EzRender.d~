import std.stdio;

import derelict.sdl2.sdl;

import drums.d;

class EzRender {

    enum {
	TAIKO_RED_DRUM = 0;
	TAIKO_BLUE_DRUM = 1;
	TAIKO_RED_LARGE_DRUM = 2;
	TAIKO_BLUE_LARGE_DRUM = 3;
    }

    SDL_Renderer* renderer;
    Performance performance;

    SDL_Texture redDrum;
    SDL_Texture blueDrum;
    //SDL_Texture redLargeDrum;
    //SDL_Texture blueLargeDrum;
    
    this(SDL_Renderer* renderer, Performance performance) {
	this.renderer = renderer;
	this.performance = performance;

	SDL_Surface redSurface = IMG_Load("red.png");
	SDL_Surface blueSurface = IMG_Load("blue.png");

	redDrum = SDL_CreateTextureFromSurface(renderer, redSurface);
	blueDrum = SDL_CreateTextureFromSurface(renderer, blueSurface);

	SDL_FreeSurface(redSurface);
	SDL_FreeSurface(blueSurface);
    }

    void renderCircle(Drum drum) {
	int drawCoord = to!int(drum.position - (frame * 17));
	SDL_Rect rect = {drawCoord, 200, 60, 60};
	if (drum.color() == 0) {
	    SDL_RenderCopy(renderer, redDrum, null, rect);
	} else {
	    SDL_RenderCopy(renderer, blueDrum, null, rect);
	}
    }

    void renderAllCircles() {

	foreach (Drum drum ; performance.drums) {
	    renderCircle(Drum drum);
	}

	SDL_RenderPresent(renderer);
    }
    
}
